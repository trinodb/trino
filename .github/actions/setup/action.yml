name: setup
description: "Verify checked out commits and setup Java"
inputs:
  java-version:
    description: "Java version to setup"
    default: 25-ea
  cache:
    description: "Cache Maven repo (true/false/restore)"
    default: restore
  cleanup-node:
    description: "Clean up node (true/false) to increase free disk space"
    default: false # Disabled by default as it adds ~4 minutes of test runtime. Should be enabled case by case.

runs:
  using: composite
  steps:
      - name: Verify args
        shell: bash
        if: github.event_name == 'repository_dispatch' && github.event.client_payload.slash_command.args.named.sha == ''
        run: |
          echo >&2 "Dispatched from a slash command but missing the 'sha' argument"
          exit 1
      - name: Verify commit
        shell: bash
        run: |
          expected=${{ github.event_name == 'repository_dispatch' &&
                github.event.client_payload.pull_request.head.sha || '' }}
          actual=$(git log -1 --format='%H')
          if [ -n "$expected" ] && [ "$actual" != "$expected" ]; then
            echo >&2 "Expected to checkout $expected but got $actual"
            exit 1
          fi
      - name: Fetch base ref to find merge-base for GIB
        shell: bash
        run: .github/bin/git-fetch-base-ref.sh
      - name: Free additional disk space
        if: ${{ format('{0}', inputs.cleanup-node) == 'true' }}
        shell: bash
        run: ./.github/bin/free-disk-space.sh
      - uses: actions/setup-java@v4
        if: ${{ inputs.java-version != '' }}
        with:
          distribution: 'temurin' # use same JDK distro as in Trino docker images
          java-version: ${{ inputs.java-version }}
      - name: Get NodeJS version from parent pom
        shell: bash
        run: |
          node_version=$(grep -m 1 '<dep.frontend-node.version>' "pom.xml" | sed -n 's/.*<dep.frontend-node.version>\(.*\)<\/dep.frontend-node.version>.*/\1/p')
          if [ -n "$node_version" ]; then
            echo "node version is $node_version"
            echo "NODE_VERSION=$node_version" >>${GITHUB_ENV}
            exit 0
          fi
      - name: Cache and Restore local NodeJS
        id: cache-nodejs
        if: ${{ format('{0}', inputs.cache) == 'true' && env.NODE_VERSION != '' }}
        uses: actions/cache@v4
        with:
          # Note: must be same set of paths as for cache:restore mode
          path: .node
          key: ${{ runner.os }}-nodejs-${{ env.NODE_VERSION }}
          restore-keys: |
            ${{ runner.os }}-nodejs-
      - name: Restore local NodeJS
        id: cache_restore-nodejs
        if: ${{ format('{0}', inputs.cache) == 'restore' && env.NODE_VERSION != '' }}
        uses: actions/cache/restore@v4
        with:
          # Note: must be same set of paths as for cache:true mode
          path: .node
          key: ${{ runner.os }}-nodejs-${{ env.NODE_VERSION }}
          restore-keys: |
            ${{ runner.os }}-nodejs-
      - name: Cache and Restore local Maven repo
        id: cache
        if: ${{ format('{0}', inputs.cache) == 'true' }}
        uses: actions/cache@v4
        with:
          # Note: must be same set of paths as for cache:restore mode
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Restore local Maven repo
        id: cache_restore
        if: ${{ format('{0}', inputs.cache) == 'restore' }}
        uses: actions/cache/restore@v4
        with:
          # Note: must be same set of paths as for cache:true mode
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Configure Problem Matchers
        if: ${{ inputs.java-version != '' }}
        shell: bash
        run: echo "::add-matcher::.github/problem-matcher.json"
